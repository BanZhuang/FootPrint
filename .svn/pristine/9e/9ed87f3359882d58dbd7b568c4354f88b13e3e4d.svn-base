package com.Activity;

import org.json.JSONObject;

import com.Activity.R;
import com.Adapter.ActivityNavigationTripAdapter;
import com.Adapter.FoucsBreifListAdapter;
import com.Adapter.FragmentTripPageListAdapter;
import com.Bll.MainBindService;
import com.Bll.MainBindService.MainBinder;
import com.Bll.MinaSocket;
import com.Bll.PictureSocket;
import com.Fragment.FriendPageFragment;
import com.Fragment.HomePageFragment;
import com.Fragment.MyinfoPageFragment;
import com.Fragment.NaviTripPageFragment;
import com.Lru.LruCacheUtils;
import com.Tool.SPUtils;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Intent;
import android.content.ServiceConnection;
import android.graphics.Color;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.os.Message;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.Window;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

public class MainActivity extends FragmentActivity implements OnClickListener{

	//布局
	private ImageView home_image,trip_image,friend_image,myinfo_image;
	private TextView home_text,trip_text,friend_text,myinfo_text;
	private LinearLayout home,trip,friend,myinfo,footprint;

	
	//fragment
	private HomePageFragment fg1;
	private NaviTripPageFragment fg2;
	private FriendPageFragment fg3;
	private MyinfoPageFragment fg4;
	private FragmentManager fManager;
	
	//自定义变量
	private int position = 0;
	public static Handler mhandler;
	
	
	//service变量
	private Intent intent;
	MainBindService mainservice;
	
	//图片下载
	private LruCacheUtils lruCache;
	private static final String DISK_CACHE_SUBDIR = "temp";
	private static final int DISK_CACHE_SIZE = 1024*1024*10;  //10MB
	
	ServiceConnection conn=new ServiceConnection() {
		
		@Override
		public void onServiceDisconnected(ComponentName name) {
			// TODO Auto-generated method stub
			
		}
		
		@Override
		public void onServiceConnected(ComponentName name, IBinder service) {
			// TODO Auto-generated method stub
			mainservice=((MainBinder)service).getService();
		}
	};
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		requestWindowFeature(Window.FEATURE_NO_TITLE); 
		setContentView(R.layout.activity_main);
		
		intent=new Intent(MainActivity.this,MainBindService.class);
		bindService(intent, conn, BIND_AUTO_CREATE);
		fManager = getSupportFragmentManager();
		initView();
		
//		mhandler=new Handler(){
//			@Override
//			public void handleMessage(Message msg) {
//				// TODO Auto-generated method stub
//				super.handleMessage(msg);
//				if(msg.what==0){
//					
//				}
//			}
//		};
		
		
		
	}

	private void initView() {
		// TODO Auto-generated method stub
		home_image=(ImageView)findViewById(R.id.home_image);
		trip_image=(ImageView)findViewById(R.id.trip_image);
		friend_image=(ImageView)findViewById(R.id.friend_image);
		myinfo_image=(ImageView)findViewById(R.id.myinfo_image);
		home_text=(TextView)findViewById(R.id.home_text);
		trip_text=(TextView)findViewById(R.id.trip_text);
		friend_text=(TextView)findViewById(R.id.friend_text);
		myinfo_text=(TextView)findViewById(R.id.myinfo_text);
		home=(LinearLayout)findViewById(R.id.home);
		trip=(LinearLayout)findViewById(R.id.trip);
		friend=(LinearLayout)findViewById(R.id.friend);
		myinfo=(LinearLayout)findViewById(R.id.myinfo);
		footprint=(LinearLayout)findViewById(R.id.footprint);
			
		home.setOnClickListener(this);
		trip.setOnClickListener(this);
		friend.setOnClickListener(this);
		myinfo.setOnClickListener(this);
		footprint.setOnClickListener(this);
		setChoiceItem(R.id.home);
	}
	
	public void onClick(View v) {
    	switch (v.getId()) {
		case R.id.home:
			setChoiceItem(R.id.home);
			break;
		case R.id.trip:
			setChoiceItem(R.id.trip);
			break;
		case R.id.friend:
			setChoiceItem(R.id.friend);
			break;
		case R.id.myinfo:
			setChoiceItem(R.id.myinfo);
			break;		
		case R.id.footprint:
			Intent intent=new Intent(MainActivity.this,ActivityChooseFocus.class);
			startActivity(intent);
			break;
		default:
			break;
		}
    }
	
	//定义一个选中一个item后的处理
    @SuppressLint("ResourceAsColor")
	public void setChoiceItem(int resourseId){
    	//隐藏所有的Fragment
    	this.position = resourseId;
    	FragmentTransaction transaction = fManager.beginTransaction();
    	hideFragments(transaction);
    	
    	switch (resourseId) {
		case R.id.home:
			home_image.setImageResource(R.drawable.home2);
			home_text.setTextColor(this.getResources().getColor(R.color.orange));
			trip_image.setImageResource(R.drawable.navi1);
			trip_text.setTextColor(Color.BLACK);
			friend_image.setImageResource(R.drawable.friend1);
			friend_text.setTextColor(Color.BLACK);
			myinfo_image.setImageResource(R.drawable.mypage1);
			myinfo_text.setTextColor(Color.BLACK);
			
			if(fg1 == null){
				fg1 = new HomePageFragment();
				transaction.add(R.id.content, fg1);
				/*Bundle bundle = new Bundle();
				bundle.putBoolean("id", true);
				fg1.setArguments(bundle);*/
			}else{
				//如果Fragment不为空，则直接将他显示出来
				transaction.show(fg1);
			}
			break;
			
		case R.id.trip:
			home_image.setImageResource(R.drawable.home1);
			home_text.setTextColor(Color.BLACK);
			trip_image.setImageResource(R.drawable.navi2);
			trip_text.setTextColor(this.getResources().getColor(R.color.orange));
			friend_image.setImageResource(R.drawable.friend1);
			friend_text.setTextColor(Color.BLACK);
			myinfo_image.setImageResource(R.drawable.mypage1);
			myinfo_text.setTextColor(Color.BLACK);
			if(fg2 == null){
				fg2 = new NaviTripPageFragment();
				transaction.add(R.id.content, fg2);
				
			}else{
								
				transaction.show(fg2);
			}
			break;
		case R.id.friend:
			home_image.setImageResource(R.drawable.home1);
			home_text.setTextColor(Color.BLACK);
			trip_image.setImageResource(R.drawable.navi1);
			trip_text.setTextColor(Color.BLACK);
			friend_image.setImageResource(R.drawable.friend2);
			friend_text.setTextColor(this.getResources().getColor(R.color.orange));
			myinfo_image.setImageResource(R.drawable.mypage1);
			myinfo_text.setTextColor(Color.BLACK);
			if(fg3 == null){
				fg3 = new FriendPageFragment();
				transaction.add(R.id.content, fg3);
			}else{
				transaction.show(fg3);
			}
			break;
			
		case R.id.myinfo:
			home_image.setImageResource(R.drawable.home1);
			home_text.setTextColor(Color.BLACK);
			trip_image.setImageResource(R.drawable.navi1);
			trip_text.setTextColor(Color.BLACK);
			friend_image.setImageResource(R.drawable.friend1);
			friend_text.setTextColor(Color.BLACK);
			myinfo_image.setImageResource(R.drawable.mypage2);
			myinfo_text.setTextColor(this.getResources().getColor(R.color.orange));
			if(fg4 == null){
				fg4 = new MyinfoPageFragment();
				transaction.add(R.id.content, fg4);
			}else{
				transaction.show(fg4);
			}
			break;
		default:
			break;
		}
    	transaction.commit();
    }
    
  //隐藏所有的Fragment，避免Fragment混乱
    private void hideFragments(FragmentTransaction transaction){
    	if(fg1 != null){
    		transaction.hide(fg1);
    	}
    	if(fg2 != null){
    		transaction.hide(fg2);
    	}
    	if(fg3 != null){
    		transaction.hide(fg3);
    	}
    	if(fg4 != null){
    		transaction.hide(fg4);
    	}
 	
    }

    @Override
    protected void onResume() {
	// TODO Auto-generated method stub
	super.onResume();
	lruCache = LruCacheUtils.getInstance();
	lruCache.open(this, DISK_CACHE_SUBDIR, DISK_CACHE_SIZE);
    }
 
	@Override
	protected void onDestroy() {
		// TODO Auto-generated method stub
		try {
			JSONObject json =new JSONObject();
			json.put("tag", 0);
			json.put("bye", "bye");
			MinaSocket.SendMessage(json);
			PictureSocket.SendMessage(json);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		unbindService(conn);
		lruCache.delete();
		//FoucsBreifListAdapter.piclist.clear();
		//FragmentTripPageListAdapter.piclist.clear();
		//ActivityNavigationTripAdapter.piclist.clear();
		
		super.onDestroy();
	}
}
